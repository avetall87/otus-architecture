#kubectl create secret generic spring-security \
#  --from-literal=spring.user.name=login \
#  --from-literal=spring.user.password=password

apiVersion: v1
data:
  spring.user.name: cG9zdGdyZXM=
  spring.user.password: cG9zdGdyZXNwYXNz
kind: Secret
metadata:
  managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:spring.user.name: {}
          f:spring.user.password: {}
        f:type: {}
      manager: kubectl
      operation: Update
  name: spring-security
type: Opaque

---

#kubectl create configmap application-configmap --from-literal=spring.application.config.db="jdbc:postgresql://hw2-postgres-postgresql:5432/postgres"
apiVersion: v1
data:
  spring.application.config.db: jdbc:postgresql://hw2-postgresql:5432/postgres
kind: ConfigMap
metadata:
  creationTimestamp: "2020-08-15T08:43:14Z"
  managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:spring.application.config.db: {}
      manager: kubectl
      operation: Update
      time: "2020-08-15T08:43:14Z"
  name: application-configmap
  resourceVersion: "524143"
  selfLink: /api/v1/namespaces/hw2/configmaps/application-configmap
  uid: 106573b6-bea1-4368-9383-8e154ba22647